# SMS gateway shared settings
#
# The 'dev' profile is default active but application-dev.properties does not
# go in the JAR (from src/test/resources), so when running the JAR you must
# explicitly use --profiles.profiles.active or set SPRING_PROFILES_ACTIVE

# General Spring (Boot) configuration
spring.profiles.active=dev
spring.application.name=sms-gateway

# SmsGateway's allowed clients as comma-separated list
# Note: a key pair must be present in the vault for each client as well
sms.gateway.allowed-clients=test

# Directory for per client response logs
sms.gateway.client-log.dir=/tmp/sms-gateway

# SmsGateway test route delays before responses
#sms.gateway.route.test-client.normal-delay=100
#sms.gateway.route.test-client.long-delay=1500

# SmsGateway Crypto: built-in vault with key pair for the 'test' client
# Every client needs its own key in the vault.  Tools for managing the
# vault(s) are in: https://github.com/zwets/sms-client
sms.gateway.crypto.keystore=classpath:builtin.vault
sms.gateway.crypto.storepass=123456

# SmsGateway Kafka settings
sms.gateway.kafka.brokers=@SET_ME@
sms.gateway.kafka.inbound-topic=send-sms
sms.gateway.kafka.outbound-topic=sms-status
sms.gateway.kafka.client-id=${spring.application.name}
sms.gateway.kafka.group-id=${spring.application.name}

# Gateway backend: either SMPP (default) or WASP
#sms.gateway.backend=SMPP

# SmsGateway backend route (SMPP)
#sms.gateway.smpp.host=@SET_ME@
#sms.gateway.smpp.port=@SET_ME@
#sms.gateway.smpp.username=@SET_ME@
#sms.gateway.smpp.password=@SET_ME@

# SmsGateway backend route (Vodacom WASP API)
#sms.gateway.vodacom.wasp.url.1-8=@SET_ME@
#sms.gateway.vodacom.wasp.username=@SET_ME@
#sms.gateway.vodacom.wasp.password=@SET_ME@

# Thread pool settings (to not be stuck on delay in the test client route)
camel.threadpool.pool-size=1
camel.threadpool.max-pool-size=20
camel.main.thread-name-pattern=#camelId#-thread-#counter#

# Camel run context as daemon (outside webcontainer)
camel.springboot.main-run-controller=true

# Tune down from the standard 1000
camel.main.consumer-template-cache-size=100
camel.main.producer-template-cache-size=100

# WASP --------------------------------------------------------------------------------------------

# Camel reduce backend timeouts (3m) as we have failover
camel.component.http.connect-timeout=5000
camel.component.http.response-timeout=15000
camel.component.http.so-timeout=10000
# Turn off overhead that we don't use
camel.component.http.cookie-management-disabled=true
camel.component.http.skip-request-headers=true
camel.component.http.skip-response-headers=true

# SMPP --------------------------------------------------------------------------------------------

# You can specify a policy for handling long messages: ALLOW - the default, TRUNCATE - long messages are split and only the first fragment will be sent to the SMSC. REJECT - if a message would need to be split, it is rejected with an SMPP NegativeResponseException and the reason code signifying the message is too long.
#camel.component.smpp.splitting-policy=ALLOW
# When true, the SMSC delivery receipt would be requested only for the last segment of a multi-segment (long) message. For short messages, with only 1 segment the behaviour is unchanged.
camel.component.smpp.single-d-l-r=true
# Defines encoding of data according the SMPP 3.4 specification, section 5.2.19. 0: SMSC Default Alphabet 4: 8 bit Alphabet 8: UCS2 Alphabet.
#camel.component.smpp.alphabet=
# Defines the data coding according the SMPP 3.4 specification, section 5.2.19. Example data encodings are: 0: SMSC Default Alphabet 3: Latin 1 (ISO-8859-1) 4: Octet unspecified (8-bit binary) 8: UCS2 (ISO/IEC-10646) 13: Extended Kanji JIS(X 0212-1990).
#camel.component.smpp.data-coding=
# Defines the encoding scheme of the short message user data. Only for SubmitSm, ReplaceSm and SubmitMulti.
#camel.component.smpp.encoding=ISO-8859-1
# Defines the interface version to be used in the binding request with the SMSC. The following values are allowed, as defined in the SMPP protocol (and the underlying implementation using the jSMPP library, respectively): legacy (0x00), 3.3 (0x33), 3.4 (0x34), and 5.0 (0x50). The default (fallback) value is version 3.4.
#camel.component.smpp.interface-version=3.4
# Sessions can be lazily created to avoid exceptions, if the SMSC is not available when the Camel producer is started. Camel will check the in message headers 'CamelSmppSystemId' and 'CamelSmppPassword' of the first exchange. If they are present, Camel will use these data to connect to the SMSC.
camel.component.smpp.lazy-session-creation=true
# Defines the numeric plan indicator (NPI) to be used in the SME. The following NPI values are defined: 0: Unknown 1: ISDN (E163/E164) 2: Data (X.121) 3: Telex (F.69) 6: Land Mobile (E.212) 8: National 9: Private 10: ERMES 13: Internet (IP) 18: WAP Client Id (to be defined by WAP Forum).
#camel.component.smpp.numbering-plan-indicator=
# Is used to request an SMSC delivery receipt and/or SME originated acknowledgements. The following values are defined: 0: No SMSC delivery receipt requested. 1: SMSC delivery receipt requested where final delivery outcome is success or failure. 2: SMSC delivery receipt requested where the final delivery outcome is delivery failure.
camel.component.smpp.registered-delivery=1
# Defines the type of number (TON) to be used in the SME. The following TON values are defined: 0: Unknown 1: International 2: National 3: Network Specific 4: Subscriber Number 5: Alphanumeric 6: Abbreviated.
#camel.component.smpp.type-of-number=
# This parameter is used to categorize the type of ESME (External Short Message Entity) that is binding to the SMSC (max. 13 characters).
#camel.component.smpp.system-type=smpp

# LOGGING -----------------------------------------------------------------------------------------

# See https://docs.spring.io/spring-boot/docs/2.7.9/reference/html/features.html#features.logging)
#debug=true (same as running with --debug, enables DEBUG level on a number of core loggers)
#trace=true (same as running with --trace, enables TRACE level on a number of core loggers)
logging.level.root=INFO

# SMS Gateway
#logging.level.it.zwets.sms.gateway=DEBUG

# Camel
#logging.level.org.apache.camel=INFO

# Kafka
#logging.level.org.apache.kafka=INFO
# These log the full Kafka consumer/producer config at INFO
#logging.level.org.apache.kafka.clients.consumer.ConsumerConfig=WARN
#logging.level.org.apache.kafka.clients.producer.ProducerConfig=WARN
# Silence very noisy loggers by default
logging.level.org.apache.kafka.clients.NetworkClient=ERROR
logging.level.org.apache.kafka.clients.consumer.internals=WARN

# Spring
#logging.level.org.springframework=INFO
#logging.level.org.springframework.core=DEBUG
#logging.level.org.springframework.beans.factory=DEBUG
#logging.level.org.springframework.context=DEBUG

